#! /usr/bin/env python

# Copyright (C) 2009 Ulteo SAS
# http://www.ulteo.com
# Author Gauvain POCENTEK <gauvain@ulteo.com>
# Author Julien LANGLOIS <julien@ulteo.com>
#
# This program is free software; you can redistribute it and/or 
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2
# of the License
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

import os
import subprocess
import sys

options = ['--start-monitoring', '--stop-monitoring']

def append_to_file(pid, desktop):
    D = '%s/%s'%(os.environ['SPOOL_USERS'], os.environ['SESSID'])
    desktop = desktop.replace("\\", "\\\\")
    f = file(D+'/apps', 'a')
    f.write("%s %s\n"%(str(pid), desktop))
    f.close()

def del_from_file(pid):
    D = '%s/%s'%(os.environ['SPOOL_USERS'], os.environ['SESSID'])
    # windows pids will be strings (0x...)
    os.system('sed -i "/^%s /d" %s/apps'%(str(pid), D))

# stop if we don't have the needed env vars
for key in ['SPOOL_USERS', 'SESSID']:
    if not os.environ.has_key(key):
        sys.exit(1)

# monitoring only
if len(sys.argv) > 0 and sys.argv[1] in options:
    if sys.argv[1] == '--start-monitoring' and len(sys.argv) == 4:
        append_to_file(sys.argv[2], sys.argv[3])
        sys.exit(0)
    elif sys.argv[1] == '--stop-monitoring' and len(sys.argv) == 3:
        del_from_file(sys.argv[2])
        sys.exit(0)
    else:
        sys.exit(1)

# monitoring + application startup
if not len(sys.argv) > 2:
    sys.exit(1)

MYPID = os.getpid()

# notify application start
append_to_file(MYPID, sys.argv[1])

# run the appli
cmd_line = subprocess.list2cmdline(sys.argv[2:])
os.system(cmd_line)

# notify end
del_from_file(MYPID)

sys.exit(0)
