#!/bin/sh -e

. /usr/share/debconf/confmodule

CHROOTPATH="/opt/ulteo"
CHROOTCONF=$CHROOTPATH/etc/ulteo/ovd/slaveserver.conf
HOSTCONF=/etc/ulteo/subsystem.conf

set_conf () {
    # $1: configfile
    # $2: field
    # $3: value
    if grep -q "^$2 *=" $1 2>/dev/null; then
        sed -i "s#^$2 *=.*#$2=$3#" $1
    else
        echo "$2=$3" >> $1
    fi
}

# download the chroot if needed
while [ ! -e "$CHROOTCONF" ]; do

    # get the tarball uri and quit if empty
    db_get ulteo-ovd-subsystem/tarball_uri && URI=$RET
    [ -z $URI ] && break

    # curl needs file://, make sure we have it if we deal with a file path
    [ $(echo $URI | cut -c 1) = '/' ] && URI="file://$URI"

    # get the chroot
    CURLOPTS="--retry 3 --connect-timeout 60 --insecure"
    if curl $CURLOPTS -f -s -I "$URI" ; then
        echo "Retrieving and uncompressing the chroot tarball..."
        mkdir -p "$CHROOTPATH"
        curl $CURLOPTS "$URI" | tar zx --numeric-owner -p -s -C "$CHROOTPATH" -f - && continue
    fi

    # chroot download failed
    rm -rf $CHROOTPATH
    db_input critical ulteo-ovd-subsystem/download_error || true
    db_go
    db_fset ulteo-ovd-subsystem/tarball_uri seen false || true
    db_input high ulteo-ovd-subsystem/tarball_uri || true
    db_go
done

if [ ! -e "$CHROOTCONF" ]; then

    # set timezone
    if [ -f /etc/timezone ]; then
        HOSTTZ=$(head -n 1 /etc/timezone)
    fi
    if [ -n "$HOSTTZ" -a -f $CHROOTPATH/usr/share/zoneinfo/$HOSTTZ ]; then
        cp /usr/share/zoneinfo/$HOSTTZ $CHROOTPATH/etc/localtime
        echo "$HOSTTZ" > $CHROOTPATH/etc/timezone
    fi

    # if we reinstall the ApS and the chroot is already there, the configs need to
    # be written again
    set_conf $CHROOTCONF "ROLES" "aps"
    set_conf $CHROOTCONF "LOG_LEVEL" "warn error info debug"

    # session manager url
    db_get ulteo-ovd-subsystem/sm_address && URL="$RET"
    set_conf $CHROOTCONF "session_manager" "$URL"

    # resolv.conf
    [ -f /etc/resolv.conf ] && cp /etc/resolv.conf $CHROOTPATH/etc/resolv.conf
    [ -f /etc/hosts ] && cp /etc/hosts $CHROOTPATH/etc/hosts

    set_conf $HOSTCONF "CHROOT" $CHROOTPATH
else
    db_input high ulteo-ovd-subsystem/no_chroot_conf || true
fi

db_stop

#DEBHELPER#

exit 0
