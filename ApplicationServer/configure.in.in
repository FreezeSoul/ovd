m4_define([uovdas_version_major], [1])
m4_define([uovdas_version_minor], [0])
m4_define([uovdas_version_build], [+svn@REVISION@])
#m4_define([uovdas_version_build], [])
m4_define([uovdas_version], [uovdas_version_major().uovdas_version_minor()uovdas_version_build()])

AC_INIT([ovd-application-server], [uovdas_version], [http://bugs.ulteo.com])

# Init automake
AM_INIT_AUTOMAKE([1.9 tar-pax])

# Checks for programs.
AC_PROG_INSTALL

# Intl (borrowed from intltool.m4)
AC_PATH_PROG(INTLTOOL_UPDATE, [intltool-update])
AC_PATH_PROG(INTLTOOL_MERGE, [intltool-merge])
AC_PATH_PROG(INTLTOOL_EXTRACT, [intltool-extract])
if test -z "$INTLTOOL_UPDATE" -o -z "$INTLTOOL_MERGE" -o -z "$INTLTOOL_EXTRACT"; then
    AC_MSG_ERROR([The intltool scripts were not found. Please install intltool.])
fi

# Check the gettext tools to make sure they are GNU
AC_PATH_PROG(XGETTEXT, xgettext)
AC_PATH_PROG(MSGMERGE, msgmerge)
AC_PATH_PROG(MSGFMT, msgfmt)
if test -z "$XGETTEXT" -o -z "$MSGMERGE" -o -z "$MSGFMT"; then
    AC_MSG_ERROR([GNU gettext tools not found; required for intltool])
fi
xgversion="`$XGETTEXT --version|grep '(GNU ' 2> /dev/null`"
mmversion="`$MSGMERGE --version|grep '(GNU ' 2> /dev/null`"
mfversion="`$MSGFMT --version|grep '(GNU ' 2> /dev/null`"
if test -z "$xgversion" -o -z "$mmversion" -o -z "$mfversion"; then
    AC_MSG_ERROR([GNU gettext tools not found; required for intltool])
fi

AC_PATH_PROG(INTLTOOL_PERL, [perl])
if test -z "$INTLTOOL_PERL"; then
   AC_MSG_ERROR([perl not found; required for intltool])
fi
if test -z "`$INTLTOOL_PERL -v | fgrep '5.' 2> /dev/null`"; then
   AC_MSG_ERROR([perl 5.x required for intltool])
fi
if test "x$2" != "xno-xml"; then
   AC_MSG_CHECKING([for XML::Parser])
   if `$INTLTOOL_PERL -e "require XML::Parser" 2>/dev/null`; then
       AC_MSG_RESULT([ok])
   else
       AC_MSG_ERROR([XML::Parser perl module is required for intltool])
   fi
fi
GETTEXT_PACKAGE=uovdaps
AC_SUBST(GETTEXT_PACKAGE)
ALL_LINGUAS=$(sed -r -e "/^#/d" -e "s/#.*//" "po/LINGUAS")
AC_SUBST(ALL_LINGUAS)

AC_ARG_ENABLE(
    web,
    AC_HELP_STRING([--enable-web], [Install the web services (default=yes)]),
    ,
    [enable_web=yes])
if test x$enable_web != xno; then
    enable_web=yes
fi
AM_CONDITIONAL([WEB], [test x"$enable_web" = x"yes"])

AC_ARG_ENABLE(
    daemon,
    AC_HELP_STRING([--enable-daemon], [Install the chroot daemon (default=no)]),
    ,
    [enable_daemon=no])
if test x$enable_daemon != xno; then
    enable_daemon=yes
fi
AM_CONDITIONAL([DAEMON], [test x"$enable_daemon" = x"yes"])

# Allow use of already installed javascript libraries
AC_ARG_WITH([prototypedir],
    [AC_HELP_STRING([--with-prototypedir],
        [use a local installation of the Prototype javascript library])],
    ,
    [with_prototypedir=no])
if test x"$with_prototypedir" != xno; then
    if test -f "$with_prototypedir/prototype.js"; then
        PROTOTYPEDIR="$with_prototypedir"
        AC_SUBST(PROTOTYPEDIR)
        echo "Using $PROTOTYPEDIR for Prototype library."
    else
        AC_MSG_WARN([$with_prototypedir/prototype.js doesn't exist; using builtin Prototype library.])
        PROTOTYPEDIR=
    fi
fi
AM_CONDITIONAL(PROTOTYPE, [test -n "$PROTOTYPEDIR"])

AC_ARG_WITH([scriptaculousdir],
    [AC_HELP_STRING([--with-scriptaculousdir],
        [use a local installation of the Scriptaculous javascript library])],
    ,
    [with_scriptaculousdir=no])
if test x"$with_scriptaculousdir" != xno; then
    if test -f "$with_scriptaculousdir/scriptaculous.js"; then
        SCRIPTACULOUSDIR="$with_scriptaculousdir"
        AC_SUBST(SCRIPTACULOUSDIR)
        echo "Using $SCRIPTACULOUSDIR for Scriptaculous library."
    else
        AC_MSG_WARN([$with_scriptaculousdir/scriptaculous.js doesn't exist; using builtin Prototype library.])
        SCRIPTACULOUSDIR=
    fi
fi
AM_CONDITIONAL(SCRIPTACULOUS, [test -n "$SCRIPTACULOUSDIR"])


AC_CONFIG_FILES([
Makefile
po/Makefile
daemon/Makefile
daemon/init/Makefile
daemon/log.d/Makefile
daemon/modules_fs.d/Makefile
daemon/functions.d/Makefile
scripts/Makefile
config/Makefile
examples/Makefile
web/webservices/Makefile
web/media/image/Makefile
web/media/script/Makefile
web/media/script/lib/prototype/Makefile
web/media/script/lib/scriptaculous/Makefile
web/media/script/lib/Makefile
web/media/style/Makefile
web/media/Makefile
web/applet/Makefile
web/includes/Makefile
web/classes/Makefile
web/Makefile
])
AC_OUTPUT

echo
echo "Configuration:"
echo "* web:    $enable_web"
echo "* daemon: $enable_daemon"

