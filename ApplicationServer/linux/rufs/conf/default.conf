[main]
# list of path involved in the union
# separator must be ','.
# each value imply a dedicated section
union = configuration, data, volatile

# authorize the mount on no empty directory.
# the can be mountbind
bind = false

# destination of the mount bind
# it can be a path or a section (start with @
bindDestination = @locale

# manage transformation due to session language
[translation]
Desktop = "%{DESKTOP}"
Document= "%{DOCUMENTS}"

[log]
level = INFO
program = RegularUnionFS
enableDevelOutput = true
enableStdOutput = true
#outputFilename = ""

# Rules list
# list of path redirection
# union_name => "regex path pattern accepted"
[rules]
volatile = "^/\.mozilla/firefox/.*.default/Cache.*"
volatile = "^/\.cache.*"
data = "^/\.thunderbird.*"
configuration = "^/\..*"
data = "%{DESKTOP}/*"

# Last rule to keep files
data = ""
# Very Last rule to store symlinks
volatile = ""


# Union list
# each section represent one union destination
# each section can contain:
#  -path:          Represent the path where is redirected content.
#                   It can be specified as absolute or relative path
#  -rsync:         Represent the path involved in the data synchronization
#                   of the initial 'path' content
#  -rsync_filter:  Represent the filter apply to the rsync command

[configuration]
# represent files involved in the configuration
#

# path => path to add
path = "/var/spool/ulteo/rufs/${USER}/"

acceptSymlink = true
deleteOnEnd = true

# data of the path is inited using the the following source
rsync = conf.Linux/

rsync_filter = "/etc/ulteo/rufs/profiles_filter.conf"



[data]
# represent user data
#

# define if we accept symlink in this location
acceptSymlink = false

# path => path to add
path = Data


[volatile]

# define if the repository support symlink
# default is false
acceptSymlink = true
deleteOnEnd = true
createParentDirectory = true

path = "/var/spool/ulteo/rufs_volatile/${USER}/"

