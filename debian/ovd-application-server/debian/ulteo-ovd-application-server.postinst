#!/bin/sh -e

[ "$1" != "configure" ] && exit 0

. /usr/share/debconf/confmodule

CURLOPTS="--retry 3 --connect-timeout 60"

set_conf () {
    # $1: configfile
    # $2: field
    # $3: value
    if grep -q "^$2=" $1 2>/dev/null; then
        sed -i "s#^$2=.*#$2=$3#" $1
    else
        echo "$2=$3" >> $1
    fi
}

set_host_conf () {
    set_conf $HOSTCONF "CHROOT" $CHROOTPATH
}

set_chroot_conf () {
    # fqdn
    db_get ulteo-ovd-application-server/fqdn || true
    FQDN="$RET"
    if [ -z "$FQDN" ]; then
        FQDN=`hostname`.`dnsdomainname`
    fi
    set_conf $CHROOTCONF "SERVERNAME" $FQDN

    # session manager url
    db_get ulteo-ovd-application-server/sm_url || true
    URL="$RET"
    set_conf $CHROOTCONF "SESSION_MANAGER_URL" "$URL"

    # resolv.conf
    [ -f /etc/resolv.conf ] && cp /etc/resolv.conf \
        $CHROOTPATH/etc/resolv.conf
    [ -f /etc/hosts ] && cp /etc/hosts \
        $CHROOTPATH/etc/hosts

    # permissions on the file
    chgrp www-data $CHROOTCONF
}

set_cups () {
    if [ -d $CHROOTPATH/var/spool/cups2all ]; then
        chroot $CHROOTPATH chown -R lp:www-data /var/spool/cups2all
        chroot $CHROOTPATH chmod -R 2770 /var/spool/cups2all
    fi
}

set_tz () {
    if [ -f /etc/timezone ]; then
        HOSTTZ=$(head -n 1 /etc/timezone)
    fi
    if [ -n "$HOSTTZ" -a -f $CHROOTPATH/usr/share/zoneinfo/$HOSTTZ ]; then
        cp /usr/share/zoneinfo/$HOSTTZ $CHROOTPATH/etc/localtime
        echo "$HOSTTZ" > $CHROOTPATH/etc/timezone
    fi
}

reload_apache()
{
    if apache2ctl configtest 2>/dev/null; then
        invoke-rc.d apache2 reload || true
    else
        echo "Your apache2 configuration is broken, so we're not restarting it for you."
    fi
}


CHROOTPATH="/opt/ulteo"

CHROOTCONF=$CHROOTPATH/etc/ulteo-ovd.conf
HOSTCONF=/etc/ulteo-ovd.conf

DOWNLOAD_OK="yes"
# download the chroot if needed
if [ ! -e "$CHROOTCONF" ] && ([ -z "$2" ] || [ -n "$DEBCONF_RECONFIGURE" ]); then
    db_get ulteo-ovd-application-server/sm_url || true
    SM="$RET"
    URL="$SM/base.tar.gz"
    echo "Downloading and uncompressing the chroot tarball..."

    mkdir -p "$CHROOTPATH"

    curl $CURLOPTS -s -I "$URL" | grep -qe "HTTP.*200 OK" || DOWNLOAD_OK="no"
    if [ "$DOWNLOAD_OK" = "yes" ]; then
        curl $CURLOPTS "$URL" | tar zx --numeric-owner --preserve -C "$CHROOTPATH" -f - || DOWNLOAD_OK="no"
    fi
    [ -n $HTTPPASSWD ] && unset HTTPPASSWD

    if [ "$DOWNLOAD_OK" = "no" ]; then
        echo "An error occured while downloading and installing the chroot, the server is not ready to be used."
        echo "You can either reconfigure this package or use the aps-chroot-install script to set up the server."
        exit 0
    else
        set_cups
        set_tz
    fi
fi

# if we reinstall the ApS and the chroot is already there, the configs need to
# be written again
set_chroot_conf
set_host_conf

db_stop

# setup apache
LOGDIR=/var/log/ulteo/applicationserver
if ! dpkg-statoverride --list $LOGDIR >/dev/null 2>&1; then
    dpkg-statoverride --update --add www-data www-data 2770 $LOGDIR
fi

if [ ! -e /etc/apache2/sites-available/applicationserver ]; then
    ln -s /etc/ulteo/applicationserver/apache2.conf \
        /etc/apache2/sites-available/applicationserver

    a2dissite default 2>/dev/null || true
    a2ensite applicationserver 2>/dev/null || true

    # make sure that we don't have old configs enabled
    if [ -e /etc/apache2/sites-available/application-server ]; then
        a2dissite application-server 2>/dev/null
    fi

    reload_apache
fi

#DEBHELPER#

exit 0

