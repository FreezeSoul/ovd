<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article>
  <articleinfo>
    <title>Ulteo Open Virtual Desktop - Protocol Description</title>
    <graphic fileref="img/ovd.png" align="center"/>

    <copyright>
      <year>2008 - 2009</year>
      <holder>Ulteo SAS</holder>
    </copyright>
  </articleinfo>

  <para>
    The purpose of this documentation is to describe the protocols
    used by <emphasis>Ulteo Open Virtual Desktop</emphasis>.
  </para>

  <para>
    Numerical session status 
  </para>

  <section>
    <title>List of Protocols used</title>
    
    <section>
      <title>Hyper Text Transfert Protocol (HTTP)</title>

      <para>
	The base communication protocol used is HTTP because of the
	Web based solution.  But we also use HTTP for the
	communication between servers: Session Manager to Application
	Server and vice versa.  This protocol run over TCP on the port
	80.  We are not using HTTPS (443) at the moment.
      </para>

      <para>
	The Administration Console is a Web site too.
      </para>

      <para><ulink url="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">HTTP on Wikipedia</ulink></para>
    </section>

    <section>
      <title>Remote Frame Buffer (RFB)</title>

      <para>
	RFB is the protocol used to display the remote desktop and
	application inside the Web broswer.  This protocol is used by
	VNC.  VNC run over TCP too.  A VNC server run one instance by
	desktop so one port for each display.  The classic port used
	by VNC is 5900.
      </para>

      <para>
	For Ulteo Open Virtual Desktop, we are using port between 5900
	and 6000.
      </para>

      <para><ulink url="http://en.wikipedia.org/wiki/RFB_protocol">RFB on Wikipedia</ulink></para>

    </section>

    <section>
      <title>Secure Shell (SSH)</title>

      <para>
	SSH is a protocol to access to a machine over a network.  SSH
	use encryption to make sure that no one on the network can
	decrypt what the user do.
      </para>

      <para>
	We are using SSH to tunnelize the RFB stream because RFB is not encprypted.
      </para>


      <para><ulink url="http://en.wikipedia.org/wiki/Secure_Shell">SSH on Wikipedia</ulink></para>
    </section>


  </section>


  <section>
    <title>Servers Communication</title>
    <para>
      The Session Manager is a full web application while the
      Application server is composed by two things: a daemon and a web
      pages.  The servers communicates by HTTP.
    </para>

    <para>
      The Session Manager send orders to Application servers.  To know
      which address own which server, the Session Manager store the
      Fully Qualified Domain Name (FQDN) that the server gave as his
      first request (server registration). This name is different as
      the <emphasis>external name</emphasis> that is only used for
      session launchs.
    </para>

    <para>
      The Applications servers send status to their Session Manager.
      Their Session Manager location is store in the deamon
      configuration file (<emphasis>SESSION_MANAGER_URL</emphasis>)
    </para>

    <section>
      <title>Security</title>
      <para>
	At the moment, the server are authenticate using the DNS resolution system.
      </para>

      <para>
	When an Application server send a status, he send an extra
	argument named <emphasis>fqdn</emphasis>.  The Session Manager
	make 2 authentications test and 1 authorization.

	<itemizedlist>
	  <listitem><para><emphasis role="strong">fqdn
	  resoltuion:</emphasis> resolve the fqdn to have ip address
	  and try to match with the remove server ip
	  ($SERVER['REMOTE_ADDR'] in php).  Authentication directly
	  depends on match</para></listitem>

	  <listitem><para><emphasis role="strong">reverse
	  resoltuion:</emphasis> resolve the server ip address and try
	  to mach with the the fqdn argument. Authentication directly
	  depends on match. This test can be disable in the
	  administration console by <emphasis>Disable fqdn
	  check</emphasis></para></listitem>

	  <listitem><para><emphasis
			      role="strong">authorisation:</emphasis> try to match the fqdn
	  with one of the <emphasis>Authorized fqdn</emphasis> defined
	  in the admin console.</para></listitem>

	</itemizedlist>
      </para>
    </section>


    <section>
      <title>Session Manager webservices</title>

      <para>
	The webservices used for the servers communication are into
	<emphasis>/webservices</emphasis>.

      </para>

      <itemizedlist>
	<listitem>
	  <para><emphasis role="strong">server_status.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>status</emphasis> ready/down/broken
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para>
	    An application server send his status at start, stop or
	    when an important error occured.  That's the way the system
	    use to know when a offline server is online again or when
	    there is a server to register.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">server_monitoring.php</emphasis></para>
	  <para>POST request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>xml</emphasis> the monitoring XML file
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para>
	    Applications servers send periodically their system
	    information in order to know the status of each
	    server. This is used for the session load balancing for
	    instance.
	  </para>
	  <para>
	    The monitoring contain the CPU and RAM load. But also the
	    running applications for each sessions.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">session_status.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>session</emphasis> session id
	      </para></listitem>
	      <listitem><para>
		<emphasis>status</emphasis> numerical status
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para>
	    Applications servers send, for each session, the status
	    each time it changes.
	  </para>
	</listitem>


	<listitem>
	  <para><emphasis role="strong">session_token.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>token</emphasis> a random string
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para>
	    When a user is redirect launch a session, he is redirect
	    with a token to an application server. To verify the user
	    identity and get the session informations, application
	    server use this token on his Session Manager and if valid,
	    get informations into a XML content.
	  </para>
	</listitem>



	<listitem>
	  <para><emphasis role="strong">icons.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>id</emphasis> an application id
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para><emphasis role="strong">Used for Windows applications</emphasis></para>	 

	  <para>
	    Get the icon refered to an application in order to display
	    in the user desktop. The application server use a cache
	    system so, an application icon is ask only one time by a server.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">app_desktopfile.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>desktopfile</emphasis> a file path
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para><emphasis role="strong">Used for Windows applications</emphasis></para>	 

	  <para>
	    Get the application informations from the desktopfile
	    argument in order to make the application shortcut and put
	    it on the user desktop.
	  </para>
	</listitem>



      </itemizedlist>
    </section>


    <section>
      <title>Application Server webservices</title>
      
      <para>
	The webservices used for the servers communication are into
	<emphasis>/webservices</emphasis>.
	
      </para>

      <itemizedlist>
	<listitem>
	  <para><emphasis role="strong">server_status.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    No Arguments
	  </para>

	  <para>Return: <emphasis>ready/down/broken</emphasis></para>
	  
	  <para>
	    Session Manager ask for the server status periodically to
	    update the status if needed and auto detect servers down
	    or borken.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">session_status.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>session</emphasis> a session id
	      </para></listitem>
	    </itemizedlist>
	  </para>

	  <para>Return: <emphasis>numerical status</emphasis></para>
	  
	  <para>
	    Session Manager ask for each session status periodically
	    to auto detect servers/sessions crachs.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">server_monotoring.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    No Arguments
	  </para>

	  <para>Return: <emphasis>monitoring XML content</emphasis></para>
	  
	  <para>
	    Session Manager ask for the server monitoring when it
	    detect a too old cache informations.
	  </para>
	</listitem>


	<listitem>
	  <para><emphasis role="strong">appplications.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    No Arguments
	  </para>

	  <para>Return: <emphasis>applications list XML content</emphasis></para>
	  
	  <para>
	    Get the installed applications on the system.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">kill_session.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>session</emphasis> a session id
	      </para></listitem>
	    </itemizedlist>
	  </para>

	  <para>Return: nothing if success</para>
	  
	  <para>
	    Force a specific session to exit without notify the user.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">server_version.php</emphasis></para>
	  <para>GET request</para>
	  <para>No Arguments</para>

	  <para>Return: version in plain/text contain</para>
	  
	  <para>
	    Get the server version. On Windows, get the Windows long
	    version. On Linux, get the content of <emphasis>/etc/issue</emphasis>.
	  </para>
	</listitem>

	<listitem>
	  <para><emphasis role="strong">server_type.php</emphasis></para>
	  <para>GET request</para>
	  <para>No Arguments</para>

	  <para>Return: <emphasis>windows/linux</emphasis></para>
	  
	  <para>
	    Get the server type.
	  </para>
	</listitem>


	<listitem>
	  <para><emphasis role="strong">icon.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>path</emphasis> a file path
	      </para></listitem>
	    </itemizedlist>
	  </para>


	  <para>Return: a png image</para>
	  
	  <para>
	    Extract the icon associated to an application.
	  </para>
	</listitem>


	<listitem>
	  <para><emphasis role="strong">apt-get.php</emphasis></para>
	  <para>GET request</para>
	  <para>
	    Arguments:
	    <itemizedlist>
	      <listitem><para>
		<emphasis>action</emphasis> request/status/show
	      </para></listitem>

	      <listitem><para>
		<emphasis>request</emphasis> a apt-get request
	      </para></listitem>
	      <listitem><para>
		<emphasis>job</emphasis> a job id
	      </para></listitem>
	      <listitem><para>
		<emphasis>show</emphasis> status/stderr/stdout
	      </para></listitem>
	    </itemizedlist>
	  </para>

	  <para>
	    Return depends on action type
	    <itemizedlist>
	      <listitem><para>
		<emphasis>request: </emphasis> job id
	      </para></listitem>

	      <listitem><para>
		<emphasis>show: </emphasis> plain text content
	      </para></listitem>
	      <listitem><para>
		<emphasis>job: </emphasis> a job id
	      </para></listitem>
	      <listitem><para>
		<emphasis>status: </emphasis> -3/-2/-1/0/1/2
	      </para></listitem>
	    </itemizedlist>
	  </para>
	  
	  <para>
	    Use to install/remove applications.
	    </para>
	    <para>
	      Get job id from action request.
	  </para>
	</listitem>

      </itemizedlist>
    </section>



  </section>

  <section>
    <title>Desktop Session</title>
    <para>
      startsession.php: HTTP 302 -> redirection on the APS external name with a token.
    </para>
    <para>
      ApS connect to the SM and use the token.
    </para>
    <para>
      Client have to call /startsession.php to init the session then the session is initialize and start (a call to applet.php give the applet configuration).
    </para>
    
    <para>
      <inlinemediaobject>
	<imageobject>
	  <imagedata fileref="media/session.png"/>
	</imageobject>
      </inlinemediaobject>
    </para>



  </section>


</article>
