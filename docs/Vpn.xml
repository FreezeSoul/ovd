<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article>
  <articleinfo>
    <title>Ulteo Open Virtual Desktop</title>
    <subtitle>VPN solution</subtitle>
    <graphic fileref="img/ovd.png" align="center"/>

    <copyright>
      <year>2008</year>
      <year>2009</year>
      <holder>Ulteo SAS - <ulink url="http://www.ulteo.com" /></holder>
    </copyright>
  </articleinfo>

  <para>
    This document is aimed at providing a VPN solution that can 
    provide multi server access though Internet.
  </para>

  <para>
    This documentation can also be used to secure all the Ulteo data stream between
    the client software and Ulteo Open Virtual Desktop servers while that's not the primary goal.
  </para>

  <para>
    This documentation won't explain how to use authentication with
    the VPN client key. VPN is just used to make a virtual network to
    get access on multiple machines with only one IP public adress.
  </para>

  <section>
    <title>Introduction</title>

    <para>
      Ulteo Open Virtual Desktop is a product that's using several
      server machines. Although for a demo or a small solution, it's possible
      to use a single machine for the whole OVD, on a production
      site, it's recommended to have several <emphasis>Application
      Servers</emphasis>.
    </para>

    <para>
      On a LAN it's not a problem to use several machines, because
      it's possible to use private IP adressing. But on Internet, it may be
      more difficult or too expensive to get several public IP adresses for only one
      service. 
    </para>

    <section>
        <title>Use Case</title>
        <para>
          A factory is installing OVD on their internal network. As a first
          step, employees have access to OVD when they are at
          work. On a second step, the factory wants to provide access to the Ulteo OVD from
          Internet so that employees can access their corporate
          desktop remotly (from home for instance).
        </para>

        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="media/vpn/main_view.png"/>
          </imageobject>
          <textobject>
            <phrase>...</phrase>
          </textobject>
        </inlinemediaobject>
      </section>

      <simpara>
        The issue is that the factory can only have one public IP adress. So
        how to install the several Ulteo servers on only one address? The
        solution we are going to explain here is using the VPN technology.
      </simpara>

      <simplesect>
        <title>Networks:</title>
        
        <itemizedlist>
          <listitem>
            <para>
              <emphasis>Ulteo secure net:</emphasis>
              this network contains the Session Manager, all Application servers
              and the Ulteo VPN server.
            </para>
          </listitem>

          <listitem>
            <para>
              <emphasis>VPN:</emphasis>
              contains the Ulteo VPN server and all VPN client
            </para>
          </listitem>
          
          <listitem>
            <para>
              <emphasis>Factory network:</emphasis>
              the base network which is hosting all those servers
            </para>
          </listitem>
          
        </itemizedlist>
 
        <note>
          <para>
            The Ulteo secure net can be the factory network. It just
            depends on the security policy.
          </para>
        </note>
      </simplesect>

      <simplesect>
        <title>Routing</title>
        <para>
          The VPN server will provide a route to each client so that clients
          are able to reach the Ulteo secure network.
        </para>
        
        <para>
          IP address plan:
          <itemizedlist>
            <listitem>
              <para>factory netwok: <emphasis>10.0.0.0/8</emphasis></para>
            </listitem>
            <listitem>
              <para>Ulteo secure network:
              <emphasis>10.0.1.0/24</emphasis></para>
            </listitem>
            <listitem>
              <para>VPN net: <emphasis>10.0.2.0/24</emphasis></para>
            </listitem>
          </itemizedlist>
    
          The VPN server will deliver a route to 10.0.2.0/24

          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="media/vpn/routing.png"/>
            </imageobject>
            <textobject>
              <phrase>...</phrase>
            </textobject>
          </inlinemediaobject>
        </para>

        <para>
          As your server will be a router, you have to enable IP forwarding on the system
        </para>
        <screen>
          <![CDATA[
# echo 1 > /proc/sys/net/ipv4/ip_forward]]>
          </screen>


      </simplesect>
  </section>


<section>
  <title>VPN server installation</title>


  <important>
    <para>
      This documentation works for Debian lenny or Ubuntu Hardy
      systems. It may work on other systems too but we haven't tested it.
    </para>
  </important>

  <para>
    Install packages:
  </para>
  <screen>
    <![CDATA[
# apt-get install openvpn openssl]]>
  </screen>

    <section>
      <title>SSL keys generation</title>

      <itemizedlist>
        <listitem>
          <para>Create a working directory and place into it</para>
          <screen>
            <![CDATA[
$ cp -R /usr/share/doc/openvpn/examples/easy-rsa/2.0 ~/vpn-keys
$ cd ~/vpn-keys]]>
          </screen>
        </listitem>

        <listitem>
          <para>config some env vars into the file <emphasis
          role="strong">vars</emphasis></para>
          <screen>
            <![CDATA[
$ export KEY_COUNTRY="EN"
$ export KEY_PROVINCE="Your province"
$ export KEY_CITY="Your country"
$ export KEY_ORG="Ulteo"
$ export KEY_EMAIL="some@email.adress"]]>
          </screen>
        </listitem>
        <listitem>
          <para>Load the following file and clean the directory</para>
          <screen>
            <![CDATA[ 
$ . ./vars
$ ./clean-all]]>
          </screen>
        </listitem>
        <listitem>
          <para>build the certificate authority</para>
          <screen>
            <![CDATA[
$ ./build-ca]]>
          </screen>
        </listitem>
        <listitem>
          <para>build the server key</para>
          <screen>
            <![CDATA[ 
$ ./build-key-server ulteo-vpn]]>
          </screen>
        </listitem>

        <listitem>
          <para>build the Diffie Hellman parameters</para>
          <screen>
            <![CDATA[
$ ./build-dh]]>
          </screen>
        </listitem>
      </itemizedlist>

      <note>
        <para>Be careful with server/client internal time when generating
        certificate! If server time is in the future the client
        certificate/key will not be valid until the server time is
        reached (SSL + UTC, maybe one day)
        </para>
      </note>
    </section>

    <section>
      <title>OpenVPN configuration</title>

      <itemizedlist>
        <listitem>
          <para>Go into your key directory</para>
          <screen>
            <![CDATA[
$ cd ~/vpn-keys]]>
          </screen>
        </listitem>
        <listitem>
          <para>
            Copy the needed files to the openvpn directory
          </para>
          <screen>
            <![CDATA[
# cp ./keys/ca.crt              /etc/openvpn/
# cp ./keys/UlteoVPNServer.crt  /etc/openvpn/
# cp ./keys/UlteoVPNServer.key  /etc/openvpn/
# cp ./keys/dh1024.pem          /etc/openvpn/
# chmod 600 /etc/openvpn/*.key]]>
          </screen>
        </listitem>
        <listitem>
          <para>
            Customize the openvpn configuration file like the following
            one. <emphasis>''/etc/openvpn/openvpn.conf</emphasis>
          </para>
          <screen>
            <![CDATA[
port 1194 ## You can use 443 if you 
          ## want to bypass some proxy/firewall
proto tcp
dev tun

ca ca.crt
cert UlteoVPNServer.crt
key UlteoVPNServer.key
dh dh1024.pem

server 10.0.2.0 255.255.255.0
route 10.0.1.0 255.255.255.0
  # used to provide the route to the
  # Ulteo secure network

keepalive 10 120
persist-key
persist-tun
status openvpn-status.log]]>
          </screen>
        </listitem>
        <listitem>
          <para>restart OpenVPN</para>
          <screen>
            <![CDATA[
# /etc/init.d/openvpn restart]]>
          </screen>
        </listitem>
      </itemizedlist>
    </section>
</section>


<section>
  <title>VPN client installation</title>

  <section>
    <title>SSL keys generation</title>
    <important>
      <para>
        These operations have to be done on the Ulteo VPN server
      </para>
    </important>

    <itemizedlist>
      <listitem>
        <para>Go to your key generation directory</para>
        <screen>
          <![CDATA[
$ cd ~/vpn-keys]]>
        </screen>
      </listitem>
        <listitem>
          <para>Load the following file and clean the directory</para>
          <screen>
            <![CDATA[ 
$ . ./vars
$ ./clean-all]]>
          </screen>
        </listitem>
<!--
      <listitem>
        <para>Add the directory to your PATH environment variable</para>
        <screen>
          <![CDATA[
$ export PATH=$PATH:/usr/share/doc/openvpn/examples/easy-rsa/2.0]]>
        </screen>
      </listitem>
      <listitem>
        <para>config some environment variables into the file <emphasis
        role="strong">vars</emphasis></para>
        <screen>
          <![CDATA[
$ export KEY_COUNTRY="EN"
$ export KEY_PROVINCE="Your province"
$ export KEY_CITY="Your country"
$ export KEY_ORG="Ulteo"
$ export KEY_EMAIL="some@email.adress"]]>
        </screen>
      </listitem>
-->
      <listitem>
        <para>build the client key</para>
        <screen>
          <![CDATA[
$ ./build-key client-name]]>
        </screen>
      </listitem>
    </itemizedlist>


  </section>

  <section>
    <title>OpenVPN configuration</title>

    <para>
      On the Ulteo VPN server, copy the ca certificate and the client
      key + certificate to a removable device.
    </para>
    <screen>
      <![CDATA[
$ cp ~/vpn-keys/ca.crt      /media/disk
$ cp ~/vpn-keys/client.crt  /media/disk
$ cp ~/vpn-keys/client.key  /media/disk]]>
    </screen>


    <section>
      <title>On Windows</title>
      <para>
        ToDo
      </para>
    </section>
  
    <section>
      <title>On Linux</title>

      <para>
      On the client system:
      <itemizedlist>
        <listitem>
          <para>
            Copy the files from the removable device to the OpenVPN
            directory
          </para>
          <screen>
            <![CDATA[
# cp /media/disk/ca.crt      /etc/openvpn/
# cp /media/disk/client.crt  /etc/openvpn/
# cp /media/disk/client.key  /etc/openvpn/
# chmod 600 /etc/openvpn/client.key]]>
          </screen>
        </listitem>
        <listitem>
          <para>
            Customize the openvpn configuration file like the following
            one. <emphasis>''/etc/openvpn/openvpn.conf</emphasis>
          </para>
          <screen>
            <![CDATA[
client
dev tun
proto tcp

remote your.public.adress.where.the.vpn.is 1194

resolv-retry infinite
nobind

persist-key
persist-tun

ca ca.crt
cert client.crt
key client.key]]>
          </screen>
        </listitem>
        <listitem>
          <para>Restart OpenVPN</para>
          <screen>
            <![CDATA[
# /etc/init.d/openvpn restart]]>
          </screen>
        </listitem>
      </itemizedlist>
    </para>
    </section>
  </section>


  <section>
    <title>Test a session</title>

    <para>
      Open a browser with the Session manager local adress (10.0.1.10).
    </para>
  </section>
    
</section>

</article>
