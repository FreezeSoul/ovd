<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
"http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd"
  [<!ENTITY base "Support_Ubuntu_Lucid.xml">]>
<article xmlns:xi="http://www.w3.org/2001/XInclude">
   <transform_var name="distrib_name" value="ubuntu" />
  <transform_var name="distrib_version" value="precise"/>
  <transform_var name="distrib_name_l" value="ubuntu" />
  <transform_var name="distrib_version_l" value="lucid"/>
  <transform_var name="distrib_name_s" value="debian" />
  <transform_var name="distrib_version_s" value="squeeze"/>
  <transform_var name="distrib_name_w" value="debian" />
  <transform_var name="distrib_version_w" value="lucid"/>
  <transform_var name="distrib_name_r" value="rhel" />
  <transform_var name="distrib_version_r" value="6.0"/>
  <transform_var name="distrib_name_o" value="opensuse" />
  <transform_var name="distrib_version_o" value="11.3"/>
  <transform_var name="distrib_name_sl" value="sles" />
  <transform_var name="distrib_version_sl" value="11_sp1"/>
  <transform_var name="rpm_install_cmd_r" value="yum"/>
  <transform_var name="product_name" value="OVD Web Applications Gateway"/>
  <articleinfo>
    <title>Ulteo Open Virtual Desktop v@VERSION@</title>
    <subtitle>Web Application Integration</subtitle>
    <graphic fileref="img/ovd.png" align="center"/>
    <copyright>
      <year>@YEAR@</year>
      <holder>Ulteo SAS</holder>
    </copyright>
  </articleinfo>

  <section id="introduction">
   <title>Introduction</title>
   <para>
	<emphasis>Ulteo Open Virtual Desktop 4.0</emphasis> supports the delivery of native web applications alongside Windows and Linux. It is intended to provide a single sign on (SSO) capability for web applications   	   
    This documentation describes how to configure OVD to integrate Web Applications into an OVD user session. 
       
  </para>
  </section>
  
  <section id="overview">
	<title>Overview</title>
   <para>The <emphasis>@product_name@</emphasis> is defined as a new role named ulteo-ovd-slaveserver-role-web. The role can be installed as an additional role or as a standalone server </para>
   
   <para>
	   <screenshot>
      <screeninfo>@product_name@</screeninfo>
      <graphic fileref="img/web_apps_overview.png"></graphic>
    </screenshot>
    </para>
    
    <para>
	   The <emphasis>@product_name@</emphasis> can be used in two mode:
	    <itemizedlist>
		<listitem>
			path: The path mode defines a full path for a web application based on <emphasis>http://ulteo.demo/webapps/webappname</emphasis>			
		</listitem>
		<listitem>
			domain: The domain mode allows to use a dns in order to define the access on the web application such as <emphasis>http://webappname.ulteo.demo/</emphasis>			
		</listitem>
		</itemizedlist>		
   </para>
   <para>
	   The publication and configuration is done on the Applications tab on the OVD Administration Console.
   </para>
    
  </section>
  
  <section id="installation">
	    <title>Installation</title>	  
	     <para>The <emphasis>@product_name@</emphasis> can be installed on all the supported distributions </para> 
	      <section>			
			<title>Ubuntu Lucid</title>			
			 <itemizedlist>
		<listitem>
          <xi:include href="&base;" xpointer="repository_online_step1_para" />
          <screen>
<![CDATA[deb @BASE_URI@/@distrib_name_l@ @distrib_version_l@ main]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[# apt-get update
# apt-get install ulteo-keyring
# apt-get update
# apt-get install ulteo-ovd-slaveserver-role-web]]>
        </screen>
        </listitem>
         </itemizedlist>
        </section>
        <section>			
			<title>Ubuntu Precise</title>
			 <itemizedlist>
		<listitem> 
			Edit the /etc/apt/sources.list.d/ulteo-ovd.list file and add these lines:          
          <screen>
<![CDATA[deb @BASE_URI@/@distrib_name@ @distrib_version@ main]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[# apt-get update
# apt-get install ulteo-keyring
# apt-get update
# apt-get install ulteo-ovd-slaveserver-role-web]]>
        </screen>
        </listitem>
         </itemizedlist>
        </section>
          <section>			
			<title>Debian Squeeze</title>
			 <itemizedlist>
		<listitem> 
			Edit the /etc/apt/sources.list.d/ulteo-ovd.list file and add these lines:          
          <screen>
<![CDATA[deb @BASE_URI@/@distrib_name_s@ @distrib_version_s@ main]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[# apt-get update
# apt-get install ulteo-keyring
# apt-get update
# apt-get install ulteo-ovd-slaveserver-role-web]]>
        </screen>
        </listitem>
         </itemizedlist>
        </section>
         <section>			
			<title>Debian Wheezy</title>
			 <itemizedlist>
		<listitem> 
			Edit the /etc/apt/sources.list.d/ulteo-ovd.list file and add these lines:          
          <screen>
<![CDATA[deb @BASE_URI@/@distrib_name_w@ @distrib_version_w@ main]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[# apt-get update
# apt-get install ulteo-keyring
# apt-get update
# apt-get install ulteo-ovd-slaveserver-role-web]]>
        </screen>
        </listitem>
         </itemizedlist>
        </section>
         <section>			
			<title>Red Hat Enterprise Linux 6</title>
			 <itemizedlist>
		<listitem> 
				 <para>
            Install the keyring package to validate the repository
            using gpg:
          </para>
          <screen>
<![CDATA[# rpm --import @BASE_URI@/@distrib_name_r@/@distrib_version_r@/keyring]]>
          </screen>
         </listitem> 
		<listitem> 			
			<para>Edit the file <emphasis>/etc/yum.repos.d/ovd.repo</emphasis> with:</para>        
          <screen>
<![CDATA[[ovd-@VERSIONNOTILD@]
name=Ulteo OVD @VERSION@
baseurl=@BASE_URI@/rhel/@distrib_version_r@/
enabled=1
gpgcheck=1
gpgkey=@BASE_URI@/rhel/@distrib_version_r@/keyring]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[
# yum install ulteo-ovd-slaveserver-role-web]]>
        </screen>        
        </listitem>
         </itemizedlist>
        </section>
         <section>			
			<title>SUSE Linux Enterprise Server 11.SP1</title>
			 <itemizedlist>
		<listitem> 			
			<para>Add the Premium repository: </para>        
          <screen>
<![CDATA[# zypper ar @BASE_URI@/@distrib_name_sl@/@distrib_version_sl@ ovd]]>
          </screen>
          </listitem>
           <listitem>
           <para>
            Install the keyring package to validate the repository using gpg:
          </para>
          <screen>
<![CDATA[# rpm --import @BASE_URI@/@distrib_name_sl@/@distrib_version_sl@/keyring]]>
          </screen>
          </listitem>
           <listitem>
           <para>
            Update the package database: 
          </para>
          <screen>
<![CDATA[# zypper refresh]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[
# zypper install ulteo-ovd-slaveserver-role-web]]>
        </screen>        
        </listitem>
         </itemizedlist>
        </section>
                 <section>			
			<title>OpenSUSE 11.3</title>
			 <itemizedlist>
		<listitem> 			
			<para>Add the Premium repository: </para>         
          <screen>
<![CDATA[# zypper ar @BASE_URI@/@distrib_name_o@/@distrib_version_o@ ovd
# zypper refresh]]>
          </screen>
          </listitem>
           <listitem>
           <para>
            Install the keyring package to validate the repository using gpg:
          </para>
          <screen>
<![CDATA[# rpm --import @BASE_URI@/@distrib_name_o@/@distrib_version_o@/keyring]]>
          </screen>
          </listitem>
           <listitem>
           <para>
            Update the package database: 
          </para>
          <screen>
<![CDATA[# zypper refresh]]>
          </screen>
          </listitem>
          <listitem>
           <para>			  
          You have to install the Premium module <emphasis>ulteo-ovd-slaveserver-role-web</emphasis>:
        </para>
        <screen>
<![CDATA[
# zypper install ulteo-ovd-slaveserver-role-web]]>
        </screen>        
        </listitem>
         </itemizedlist>
        </section>
	    
	    
  </section>
  <section id="configuration" >
		<title>Configuration</title>
  <section id="format">
	  <title>Configuration file</title>
   In order to do this, a JSON configuration file needs to be created. More details of the JSON format can be found in Wikipedia: <ulink url="http://en.wikipedia.org/wiki/JSON"></ulink>
			One JSON file is required for each Web Application. The JSON config file is uploaded using the OVD Admin Console. The configuration of the JSON is described below.
			Parameters described in this section are variables which are configurable in Admin Console. They can be used in handlers and filters on any nesting level. Usage of this variable is $(VARNAME).	
   
	<section id="configuration_s" >
		<title>Configuration section</title>
		<para>
			
		</para>
		<para>
			There are three variables:
			<itemizedlist>
        <listitem>
			<emphasis>TARGETURL</emphasis> – Defines where is located the web applications
		</listitem>
		<listitem>
			<emphasis>USER_LOGIN</emphasis> – Defines the user login. If this parameter isn't used, the OVD user login will be used.
		</listitem>
		<listitem>
			<emphasis>USER_PASSWD</emphasis> – Defines the user password. If this parameter isn't used, the OVD user password will be used.		
		</listitem>	
		</itemizedlist>		
		</para>
		<para>
				Example:
				<screen>
				<![CDATA[  "Configuration": {
        "TARGETURL": {
            "type": "url",
            "title": "Server URL",
            "value": "https://demo.zarafa.com/webapp"
        },
        "USER_LOGIN": {
            "type": "string",
            "value": "demo12"
        },
        "USER_PASSWD": {
            "type": "string",
            "value": "demo12"
        }
    }]]>
				</screen>
			</para>
		<para>
			Any other type used in JSON file will be displayed in Admin Console as read-only text input field.
		</para>
		<para>
			Optional parameter <emphasis>title</emphasis> is used in Admin Console as label for input field.
		</para>		
	</section>
	<section id="handlers">
		<title>Handlers section</title>
		<para>
			This section defines what handlers and in which order should be used to handle traffic between user’s browser and web application.
		</para>
		<para>
			Each handler should have unique name (key). Parameter <emphasis>type</emphasis> is obligatory and defines type of handlers. Optional parameter filters describes filters that should be proceed during request handling.
		</para>
		<section id="ServerHandler">
			<title>ServerHandler</title>
			<para>
				ServerHandler - manages basic configuration of target web application
			</para>
			<para>
			Parameters:
				<itemizedlist>
					<listitem>
						<emphasis>baseURI</emphasis> – (obligatory) – address of web application
					</listitem>
					<listitem>
						<emphasis>next_handler</emphasis> – (obligatory) – name of next handler
					</listitem>
				</itemizedlist>
			</para>
			<para>
				Example:
				<screen>
				<![CDATA[ "Server": {
  "type": "ServerHandler",
  "baseURI": "http://$(TARGETIP)",
  "next_handler": "Dispatch"
  }]]>
				</screen>
			</para>
		</section>
		<section id="ClientHandler">
			<title>ClientHandler</title>
			<para>
				ClientHandler opens connection to target web application, download requested date and returns it to user’s browser.
			</para>		
			<para>
				Example:
				<screen>
				<![CDATA[ "Client":{
  "type": "ClientHandler"
  }]]>
				</screen>
			</para>
		</section>
		<section id="DispatchHandler">
			<title>DispatchHandler</title>
			<para>
				DispatchHandler chains the query to others handlers, based on rules.
			</para>
			<para>
				Parameters <emphasis>bindings</emphasis> (mandatory) defines list of conditions and <emphasis>next_handler</emphasis> (handler to execute if no condition is fulfilled).
			</para>
			<para>
			Condition parameter:
				<itemizedlist>
					<listitem>
						<emphasis>cond</emphasis> – (mandatory) – valid python expression.
					</listitem>
					<listitem>
						<emphasis>next_handler</emphasis> (mandatory) - name of handler executed if condition is fulfilled
					</listitem>
				</itemizedlist>
			</para>
			<para>
			Variables available in cond expression:
				<itemizedlist>
					<listitem>
						<emphasis>request_path</emphasis> – (string) – path of requested resource
					</listitem>
					<listitem>
						<emphasis>request_headers</emphasis> – (list) – list of request headers
					</listitem>
				</itemizedlist>
			</para>
			<para>
				Example:
				<screen>
				<![CDATA[ Dispatch:
  type: "DispatchHandler"
  bindings:
    condition1:
      cond: "request_path.startswith(‘/manage’)"
      next_handler: "Unauthorized"
    condition2:
      cond: "’login_form’ in request_path"
      next_handler: "LoginForm"
    next_handler: "Client"]]>
				</screen>
			</para>
		</section>	
		<section id="ChainHandler">
			<title>ChainHandler</title>
			<para>
				ChainHandler basic connector between two handlers, used mainly to add filters between two handlers.
			</para>		
			<para>
				Example:
				<screen>
				<![CDATA[ Example:
Chain:
  type: "ChainHandler"
  next_handler: "Client"]]>
				</screen>
			</para>
		</section>
		<section id="RedirectHandler">
			<title>RedirectHandler</title>
			<para>
				RedirectHandler redirects to given location. Parameter <emphasis>location</emphasis> (mandatory) can define URL or path to which user should be redirected.
			</para>		
			<para>
				Example:
				<screen>
				<![CDATA[ Example:
Chain:
  type: "ChainHandler"
  next_handler: "Client"]]>
				</screen>
			</para>
		</section>
	
  </section>
  </section>
  <section>
	  <title>Example</title>
	  <para> The example below illustrates how to configure and use Zarafa (a Webmail) in <emphasis>Ulteo Open Virtual Desktop</emphasis></para>
	  <screen>
<![CDATA[
{
    "title": "Zarafa WebApp",
    "Configuration": {
        "TARGETURL": {
            "type": "url",
            "title": "Server URL",
            "value": "https://demo.zarafa.com/webapp"
        },
        "USER_LOGIN": {
            "type": "string",
            "value": "demo12"
        },
        "USER_PASSWD": {
            "type": "string",
            "value": "demo12"
        }
    },
    "Handlers": {
        "Start": {
            "baseURI": "$(TARGETURL)",
            "next_handler": "LoginRequestHandler",
            "type": "ServerHandler"
        },
        "Client": {
            "type": "ClientHandler"
        },
        "LoginRequestHandler": {
            "next_handler": "Client",
            "type": "ChainHandler",
            "filters": [
                {
                    "type": "CookieFilter",
                    "managed": [
                        "ZARAFA_WEBAPP"
                    ]
                },
                {
                    "type": "StaticRequestFilter",
                    "path": "/webapp/",
                    "autologin": false,
                    "content_regexp": "login_main",
                    "form": {
                        "username": "$(USER_LOGIN)",
                        "password": "$(USER_PASSWD)"
                    }
                }
            ]
        }
    }
}

]]>	  
</screen>
  </section>

</section>
  <xi:include href="colophon.xml" />
</article>
