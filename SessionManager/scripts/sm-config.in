#!/bin/sh
# Copyright (C) 2008 Ulteo SAS
# Author: Gauvain Pocentek <gauvain@ulteo.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, version 2
# of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

PROGRAM=$(basename $0)

CONFDIR=@CONFDIR@
CONFFILE=$CONFDIR/config.inc.php
ALIASFILE=$CONFDIR/apache2.conf
LOGDIR=@LOCALSTATEDIR@/log/ulteo
SPOOLDIR=@LOCALSTATEDIR@/spool/ulteo
WEBDIR=@WEBDIR@

WGETARGS="--tries=3 --timeout=60"

# helper functions
die () {
    echo $@
    exit 1
}

usage ()
{
    echo -n "Usage: $PROGRAM [--no-download] [--chroot-url url] [--chroot-dir dir]"
    echo -n " [--admin-login login] [--admin-pwd pwd] [--apache-group group]"
    echo " [--apache-dir dir] [--version|-v] [--help|-h]"
    echo "Configure an Ulteo Session Manager (Open Virtual Desktop)"
    echo
    echo "  --no-download        don't download the chroot, assume it is already installed"
    echo "  --chroot-url url     download the chroot from 'url'"
    echo "                       (default: http://www.ulteo.com/main/downloads/ulteo-ovd.php)"
    echo "  --chroot-dir dir     downlod the chroot as dir/base.tar.gz"
    echo "                       (default: $WEBDIR/base.tar.gz)"
    echo "  --admin-login login  set the admin login to 'login'"
    echo "  --admin-pwd pwd      set the admin password to 'pwd'"
    echo "  --apache-group group set the apache group to 'group'"
    echo "                       (default: guess from /etc/group)"
    echo "  --apache-dir dir     set the apache configuration directory to 'dir'"
    echo "  --assume-yes         don't ask confirmation"
    echo "                       (default: guess from /etc/{httpd,apache2})"
    echo "  --help|-h            display this help"
    echo "  --version|-v         display version informations"
}

set_apache () {
    chgrp $APACHE_GROUP $LOGDIR/sessionmanager $SPOOLDIR/sessionmanager
    chmod 755 $LOGDIR $SPOOLDIR
    chmod 2770 $LOGDIR/sessionmanager $SPOOLDIR/sessionmanager

    ln -sf $ALIASFILE $APACHE_DIR/session-manager.conf
}

set_admin_credentials () {
    PASS=$(echo -n $PASS1 | md5sum | cut -d " " -f 1)
    unset PASS1
    unset PASS2

    sed -r -i "s,^(.*SESSIONMANAGER_ADMIN_LOGIN.*').*('.*)$,\1$LOGIN\2," $CONFFILE
    sed -r -i "s,^(.*SESSIONMANAGER_ADMIN_PASSWORD.*').*('.*)$,\1$PASS\2," $CONFFILE
}

get_chroot () {
    wget --spider $WGETARGS $URL || die Unable to reach the chroot tarball. Aborting.
    wget $WGETARGS "$URL" -O $TARGET || die An error occured while downloading the chroot. Aborting.

    # Create a symlink to $WEBDIR/base.tar.gz if this file doesn't exist
    [ ! -e "$WEBDIR/base.tar.gz" ] && ln -s "$TARGET" "$WEBDIR/base.tar.gz"
}

unset NODOWNLOAD
unset APACHE_GROUP
unset APACHE_DIR
unset LOGIN
unset PASS1
unset PASS2
unset URL
unset TARGET
NOCONFIRM=0
while [ x"$1" != x"" ]; do
    case $1 in
        --no-download)
            NODOWNLOAD="ok";;
        --chroot-url)
            URL="$2"
            shift;;
        --chroot-dir)
            TARGET="$2"
            shift;;
        --admin-login)
            LOGIN="$2"
            shift;;
        --admin-pwd)
            PASS1="$2"
            PASS2="$2"
            shift;;
        --apache-group)
            APACHE_GROUP="$2"
            shift;;
        --apache-dir)
            APACHE_DIR="$2"
            shift;;
        --assume-yes)
            NOCONFIRM=1;;
        --help|-h)
            usage
            exit 0;;
        --version|-h)
            echo $PROGRAM @PKG_VERSION@
            exit 0;;
        *)
            usage
            exit 1;;
    esac
    shift
done

while [ -z "$LOGIN" ]; do
    echo -n "Admin login: "
    read LOGIN
done

stty_orig=$(stty -g)
while [ -z "$PASS1" -o x"$PASS1" != x"$PASS2" ]; do
    echo -n "Password: "
    while [ -z "$PASS1" ]; do
        stty -echo
        read PASS1
        stty $stty_orig
        echo
    done
    echo -n "Retype password: "
    while [ -z "$PASS2" ]; do
        stty -echo
        read PASS2
        stty $stty_orig
        echo
    done
    if [ x"$PASS1" != x"$PASS2" ]; then
        echo "Passwords don't match... try again."
        unset PASS1
        unset PASS2
    fi
done

while [ -z "$APACHE_GROUP" ]; do
    if grep ^apache: /etc/group >/dev/null 2>&1; then
        APACHE_GROUP="apache"
    elif grep ^www-data: /etc/group >/dev/null 2>&1; then
        APACHE_GROUP="www-data"
    fi
    if [ -z "$APACHE_GROUP" ]; then
        echo -n "Apache group: "
        read APACHE_GROUP
    fi
done

while [ -z "$APACHE_DIR" ]; do
    if [ -d "/etc/httpd/conf.d" ]; then
        APACHE_DIR=/etc/httpd/conf.d
    elif [ -d "/etc/apache2/conf.d" ]; then
        APACHE_DIR="/etc/apache2/conf.d"
    fi
    if [ -z "APACHE_DIR" ]; then
        echo -n "Apache configuration directory: "
        read APACHE_DIR
    fi
done

if [ -z "$NODOWNLOAD" ]; then
    PROPOSED_URL=http://www.ulteo.com/main/downloads/ulteo-ovd.php
    PROPOSED_TARGET=$WEBDIR/base.tar.gz
    if [ -z "$URL" ]; then
        echo -n "Chroot download url [$PROPOSED_URL]: "
        read URL
        if [ -z "$URL" ]; then
            URL=$PROPOSED_URL
        fi
    fi
    if [ -z "$TARGET" ]; then
        echo -n "Chroot destination [$PROPOSED_TARGET]: "
        read TARGET
        if [ -z "$TARGET" ]; then
            TARGET=$PROPOSED_TARGET
        fi
        if [ -d "$TARGET" ]; then
            TARGET="$TARGET"/base.tar.gz
        fi
    fi
fi

echo
echo "Options:"
echo -n "* chroot download:  "
if [ -z "$NODOWNLOAD" ]; then
    echo "yes"
    echo "* chroot URL:       $URL"
    echo "* chroot directory: $TARGET"
else
    echo "no"
fi
echo "* apache group:     $APACHE_GROUP"
echo "* apache dir:       $APACHE_DIR"

if [ "$NOCONFIRM" -ne 1 ]; then
    echo
    echo -n "Is this correct? [Y/n] "
    read GO
    [ -z "$GO" ] && GO=Y
    case $GO in
        Y|y)
            # continue
            ;;
        *)
            echo "Aborting."
            exit 0
            ;;
    esac
fi

[ -n "$OVDDEBUG" ] && exit 0
[ -z "$NODOWNLOAD" ] && get_chroot
set_admin_credentials
set_apache

echo "Configuration done."
echo "Please reload the web server configuration to enable the service."

exit 0
